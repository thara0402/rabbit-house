{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceNamePrefix": {
            "type": "string"
        },
        "alertRules": {
            "type": "array"
        },
        "metricAlertRules": {
            "type": "array"
        }
    },
    "variables": {
        "appInsightsName":"[concat(parameters('resourceNamePrefix'), '-ai')]",
        "webAppName":"[concat(parameters('resourceNamePrefix'), '')]",
        "actionGroupName":"[concat(parameters('resourceNamePrefix'), '-ag')]",
        "hostingPlanName":"[concat(parameters('resourceNamePrefix'), '')]"
    },
    "resources": [
        {
            "type": "Microsoft.insights/scheduledqueryrules",
            "apiVersion": "2018-04-16",
            "name": "[format(parameters('alertRules')[copyIndex()].name, variables('webAppName'))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
            ],
            "properties": {
                "description": "[format(parameters('alertRules')[copyIndex()].description, variables('webAppName'))]",
                "enabled": "true",
                "source": {
                    "query": "[format(parameters('alertRules')[copyIndex()].query, variables('webAppName'))]",
                    "dataSourceId": "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
                    "queryType": "ResultCount"
                },
                "schedule": {
                    "frequencyInMinutes": 5,
                    "timeWindowInMinutes": 5
                },
                "action": {
                    "severity": "[parameters('alertRules')[copyIndex()].severity]",
                    "trigger":{
                        "thresholdOperator":"GreaterThan",
                        "threshold": 1
                    },
                    "aznsAction":{
                        "actionGroup":[
                            "[resourceId('Microsoft.insights/actionGroups', variables('actionGroupName'))]"
                        ],
                        "emailSubject": "[format(parameters('alertRules')[copyIndex()].emailSubject, variables('webAppName'))]"
                    },
                    "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction"
                }
            },
            "copy": {
                "name": "alertcopy",
                "count": "[length(parameters('alertRules'))]"
            }
        },
        {
            "name": "[format(parameters('metricAlertRules')[copyIndex()].name, variables('hostingPlanName'))]",
            "type": "Microsoft.Insights/metricAlerts",
            "location": "global",
            "apiVersion": "2018-03-01",
            "properties": {
                "description": "[format(parameters('metricAlertRules')[copyIndex()].description, variables('hostingPlanName'))]",
                "severity": "[parameters('metricAlertRules')[copyIndex()].severity]",
                "enabled": true,
                "scopes": [
                    "[resourceId(resourceGroup().name, 'Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT5M",
                "criteria": {
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
                    "allOf": [
                        {
                            "name" : "1st criterion",
                            "metricName": "[parameters('metricAlertRules')[copyIndex()].metricName]",
                            "dimensions":[],
                            "operator": "GreaterThan",
                            "threshold" : "[parameters('metricAlertRules')[copyIndex()].threshold]",
                            "timeAggregation": "Average"
                        }
                    ]
                },
                "actions": [
                    {
                        "actionGroupId": "[resourceId('Microsoft.insights/actionGroups', variables('actionGroupName'))]"
                    }
                ]
            },
            "copy": {
                "name": "metricAlertcopy",
                "count": "[length(parameters('metricAlertRules'))]"
            }
        }
    ]
}